{"version":3,"sources":["App.js","index.js"],"names":["App","question_json","question","option","answer","form","useForm","console","log","getValues","total_question","length","useState","currentIndex","setCurrentIndex","answers","setAnswers","setUserScore","className","map","f","type","checked","register","value","onChange","e","index","setValue","qstn_no","selected_option","handleOnChangeOption","onClick","disabled","alert","Array","x","i","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.d3ff5c11.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const question_json = [\n    {\n      question: \"What does HTML stand for?\",\n      option: [\n        \"Home Tool Markup Language\",\n        \"Hyper Text Markup Language\",\n        \"Hyperlinks and Text Markup Language\"\n      ],\n      answer: \"Hyper Text Markup Language\"\n    },\n    {\n      question: \"Who is making the Web standards?\",\n      option: [\n        \"Google\",\n        \"Microsoft\",\n        \"Mozilla\",\n        \"The World Wide Web Consortium\"\n      ],\n      answer: \"The World Wide Web Consortium\"\n    },\n    {\n      question: \"Choose the correct HTML element for the largest heading:\",\n      option: [\"<h6>\", \"<heading>\", \"<h1>\", \"<head>\"],\n      answer: \"<h1>\"\n    },\n    {\n      question: \"What is the correct HTML element for inserting a line break?\",\n      option: [\"<br>\", \"<lb>\", \"<break>\"],\n      answer: \"<br>\"\n    },\n    {\n      question: \"What is the correct HTML for adding a background color?\",\n      option: [\n        \"<body bg='yellow'>\",\n        \"<body style='background-color:yellow;'>\",\n        \"<background>yellow</background>\"\n      ],\n      answer: \"<body style='background-color:yellow;'>\"\n    },\n    {\n      question: \"Choose the correct HTML element to define important text\",\n      option: [\"<i>\", \"<strong>\", \"<b>\", \"<important>\"],\n      answer: \"<b>\"\n    },\n    {\n      question: \"Choose the correct HTML element to define emphasized text\",\n      option: [\"<i>\", \"<italic>\", \"<em>\"],\n      answer: \"<i>\"\n    },\n    {\n      question: \"What is the correct HTML for creating a hyperlink?\",\n      option: [\n        \"<a href='http://www.w3schools.com'>W3Schools</a>\",\n        \"<a>http://www.w3schools.com</a>\",\n        \"<a url='http://www.w3schools.com'>W3Schools.com</a>\",\n        \"<a name='http://www.w3schools.com'>W3Schools.com</a>\"\n      ],\n      answer: \"<a href='http://www.w3schools.com'>W3Schools</a>\"\n    },\n    {\n      question: \"Which character is used to indicate an end tag?\",\n      option: [\"<\", \"*\", \"^\", \"/\"],\n      answer: \"/\"\n    },\n    {\n      question: \"How can you open a link in a new tab/browser window?\",\n      option: [\n        \"<a href='url' target='_blank'>\",\n        \"<a href='url' target='new'>\",\n        \"<a href='url' new>\"\n      ],\n      answer: \"<a href='url' target='_blank'>\"\n    }\n  ];\n  const form = useForm();\n  console.log(form.getValues());\n  const total_question = question_json.length;\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [userScore, setUserScore] = useState(0);\n\n  const handleNext = () => {\n    if (total_question > currentIndex + 1) {\n      console.log(\"yyy\");\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      alert(\"no more question\");\n    }\n  };\n\n  const handlePrev = () => {\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    } else {\n      alert(\"no more question\");\n    }\n  };\n\n  const handleFirst = () => {\n    setCurrentIndex(0);\n  };\n\n  const handleLast = () => {\n    console.log(currentIndex, total_question);\n    setCurrentIndex(total_question - 1);\n  };\n\n  const handleOnChangeOption = (e, value, index) => {\n    form.setValue(`answer[qstn_${currentIndex}]`, value);\n    console.log(value, index, \"option\", e);\n    setAnswers([\n      ...answers,\n      ...[{ qstn_no: index + 1, selected_option: value }]\n    ]);\n  };\n\n  const handleSubmit = () => {\n    const values = form.getValues();\n    if (values.length > 0) {\n    }\n    setUserScore();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"quiz-title\">Quiz Application</div>\n      <div className=\"quiz-header\">ASP .NET QuiZ</div>\n      <div className=\"question-section\">\n        <div className=\"question-tag\">Question no: {currentIndex + 1}</div>\n        <div className=\"question-card\">\n          <div>{question_json[currentIndex].question}</div>\n\n          {question_json[currentIndex].option.map((f) => {\n            return (\n              <div className=\"option-render\" key={f}>\n                <div className=\"options\">\n                  <input\n                    type=\"checkbox\"\n                    checked={\n                      form.getValues(`answer[qstn_${currentIndex}]`) === f\n                    }\n                    {...form.register(`answer[qstn_${currentIndex}]`)}\n                    value={f}\n                    onChange={(e) => handleOnChangeOption(e, f, currentIndex)}\n                  />\n                  <span className=\"option-text\">{f}</span>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"end-line\"></div>\n        <div className=\"action-cta\">\n          <button onClick={() => handleFirst()}>First</button>\n          <button\n            disabled={form.getValues(`answer[qstn_${currentIndex}]`)}\n            onClick={() => handlePrev()}\n          >\n            Prev\n          </button>\n          <button onClick={() => handleNext()}>Next</button>\n          <button onClick={() => handleLast()}>Last</button>\n        </div>\n        <div className=\"pagination\">\n          {[...Array(total_question)].map((x, i) => (\n            <button\n              disabled={form.getValues(`answer[qstn_${i}]`)}\n              onClick={() => setCurrentIndex(i)}\n            >\n              {i + 1}\n            </button>\n          ))}\n        </div>\n        <div className=\"end-line\"></div>\n        <div className=\"submit-quiz\">\n          <button>QuiZ</button>\n          <button>Review</button>\n          <button onClick={() => handleSubmit()}>Submit Quiz</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}